==========================
   GIT RESTORE | REVERT | RESET
==========================

1️⃣ RESTORE
------------
Use when you’ve made some changes in a file that are NOT committed yet 
and you want to restore the file to its previous state.

Steps:
  1. Check what has changed:
       git diff
  2. Restore the file to its original version:
       git restore <file_name>

Note:
  - This command only works for uncommitted changes.
  - Once you commit, restore won’t affect those changes.


2️⃣ REVERT
------------
Use when you’ve already committed the changes but later realize you need to undo them.

Steps:
  1. View the commit history:
       git log --oneline
  2. Copy the commit hash you want to revert.
  3. Revert that commit:
       git revert <commit_hash>

What it does:
  - Creates a new commit that reverses the changes made by the selected commit.
  - Keeps the repository history intact.

Note:
  - Safe for shared repositories.
  - Does not remove commits — instead, it adds a new “undo” commit.


3️⃣ RESET
------------
Use when you want to completely remove certain commits from your branch history.

Example:
  Suppose a developer made 7 commits, but commits from #4 onwards have issues.
  Since commit #3 is the last correct one, we can reset the branch back to that point.

Command:
       git reset --soft <commit_hash>
   or  git reset --hard <commit_hash>

Explanation:
  - --soft : Moves the HEAD pointer to the specified commit but keeps changes staged.
  - --hard : Moves the HEAD pointer AND removes all changes after that commit.

Warning:
  - git reset rewrites history.
  - It does NOT create logs of removed commits.
  - Use cautiously, especially on shared repositories.

--------------------------
SUMMARY
--------------------------
| Command        | Purpose                            | Affects Commits | Safe for Shared Repos | Notes                                      |
|----------------|------------------------------------|-----------------|------------------------|--------------------------------------------|
| git restore    | Undo uncommitted changes           | No              | Yes                    | Restores file content before commit        |
| git revert     | Undo committed changes (adds new)  | Yes             | Yes                    | Creates a new commit to reverse changes    |
| git reset      | Remove commits / rewrite history   | Yes             | No                     | Moves HEAD to older commit (destructive)   |
--------------------------
